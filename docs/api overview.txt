luaState.h
  includes:
    lua.hpp
    <functional>
    <string>
  class:
    lua::luaState - c++ class wrapper of lua_State
	note: luaState::openState must be user-defined to use default constructor

luaStream.h
  includes:
    luaState.h
    <functional>
  class:
    lua::luastream - stream interface to lua
  functions:
    lua::addFile - override for <filesystem>

luaManip.h
  includes:
    Utils.h
    luaStream.h
    <functional>
  class:
    lua::lnManip - manipulator with no arguments
    lua::lManip - manipulator with one argument
    lua::ldManip - manipulator with two arguments
  functions:
    luaM_totop
    luaM_insert
    luaM_reverse
    luaM_copy
    luaM_remove
    luaM_pack
    luaM_unpack
    luaM_merge
    luaM_grab
    luaM_set

Utils.h
  class:
    <_Stream> baseManip - pure virtual class that all manipulators inherit from

luaBindings.h
  includes:
    lua.hpp
    luaClass.h
    <string>
  class:
    lua::error - exception type
  functions:
    lua::luaRegEx - splits a string to enable tabled lookup of lua vars
    lua::toPosIndex - turns an index into a positive lua index
    lua::toNegIndex - turns an index into a negative lua index
    lua::addFile - loads a file into the lua_State
    lua::getVar - pushes the luaVar to the top of the stack
    lua::setVar - sets a luaVar to a specified value
    lua::pushObj - Adds the passed value to the lua stack
    lua::setcvar - sets the passed c var to the value at the top of the lua stack
    luaL_newVar - wrapper of setVar
    luaL_newFunc - wrapper of lua_register

luaDebug.h
  includes:
    <iostream>
    lua.hpp
    luaState.h
    luaStream.h
  class:
	<_stream> lua::debug - templated debug stream object
  functions:
    lua::printIndex - outputs the value at the given index
    <luaL,_stream> lua::debuglua - outputs the passed lua object to the passed debug stream


